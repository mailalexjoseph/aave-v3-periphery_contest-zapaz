[
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -83,7 +83,8 @@\n       config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n \n       // Install TransferStrategy logic at IncentivesController\n-      _installTransferStrategy(config[i].reward, config[i].transferStrategy);\n+      /// DeleteExpressionMutation(`_installTransferStrategy(config[i].reward, config[i].transferStrategy)` |==> `assert(true)`) of: `_installTransferStrategy(config[i].reward, config[i].transferStrategy);`\n+      assert(true);\n \n       // Set reward oracle, enforces input oracle to have latestPrice function\n       _setRewardOracle(config[i].reward, config[i].rewardOracle);\n",
    "id": "1",
    "name": "mutants/1/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -136,7 +136,8 @@\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// DeleteExpressionMutation(`require(to != address(0), 'INVALID_TO_ADDRESS')` |==> `assert(true)`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    assert(true);\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n \n",
    "id": "2",
    "name": "mutants/2/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// BinaryOpMutation(`-` |==> `/`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = totalRewards/amount;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "3",
    "name": "mutants/3/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -245,7 +245,8 @@\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n-        _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n+        /// DeleteExpressionMutation(`_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128()` |==> `assert(true)`) of: `_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();`\n+        assert(true);\n         break;\n       }\n     }\n",
    "id": "4",
    "name": "mutants/4/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -245,7 +245,8 @@\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n-        _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n+        /// AssignmentMutation(`difference.toUint128()` |==> `1`) of: `_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();`\n+        _assets[asset].rewards[reward].usersData[user].accrued = 1;\n         break;\n       }\n     }\n",
    "id": "5",
    "name": "mutants/5/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -241,7 +241,8 @@\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n       if (totalRewards <= amount) {\n-        _assets[asset].rewards[reward].usersData[user].accrued = 0;\n+        /// DeleteExpressionMutation(`_assets[asset].rewards[reward].usersData[user].accrued = 0` |==> `assert(true)`) of: `_assets[asset].rewards[reward].usersData[user].accrued = 0;`\n+        assert(true);\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n",
    "id": "6",
    "name": "mutants/6/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -236,7 +236,8 @@\n     uint256 totalRewards;\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; assert(true)) {\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n",
    "id": "7",
    "name": "mutants/7/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -290,7 +290,8 @@\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n-          claimedAmounts[j] += rewardAmount;\n+          /// AssignmentMutation(`rewardAmount` |==> `1`) of: `claimedAmounts[j] += rewardAmount;`\n+          claimedAmounts[j] += 1;\n           _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n         }\n       }\n",
    "id": "8",
    "name": "mutants/8/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -346,7 +346,8 @@\n   function _installTransferStrategy(address reward, ITransferStrategyBase transferStrategy)\n     internal\n   {\n-    require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n+    /// RequireMutation(`address(transferStrategy) != address(0)` |==> `false`) of: `require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');`\n+    require(false, 'STRATEGY_CAN_NOT_BE_ZERO');\n     require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n \n     _transferStrategy[reward] = transferStrategy;\n",
    "id": "9",
    "name": "mutants/9/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  }
]