[
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -37,7 +37,8 @@\n   mapping(address => IEACAggregatorProxy) internal _rewardOracle;\n \n   modifier onlyAuthorizedClaimers(address claimer, address user) {\n-    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\n+    /// DeleteExpressionMutation(`require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED')` |==> `assert(true)`) of: `require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');`\n+    assert(true);\n     _;\n   }\n \n",
    "id": "1",
    "name": "mutants/1/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -37,7 +37,8 @@\n   mapping(address => IEACAggregatorProxy) internal _rewardOracle;\n \n   modifier onlyAuthorizedClaimers(address claimer, address user) {\n-    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\n+    /// RequireMutation(`_authorizedClaimers[user] == claimer` |==> `true`) of: `require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');`\n+    require(true, 'CLAIMER_UNAUTHORIZED');\n     _;\n   }\n \n",
    "id": "2",
    "name": "mutants/2/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -37,7 +37,8 @@\n   mapping(address => IEACAggregatorProxy) internal _rewardOracle;\n \n   modifier onlyAuthorizedClaimers(address claimer, address user) {\n-    require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');\n+    /// RequireMutation(`_authorizedClaimers[user] == claimer` |==> `false`) of: `require(_authorizedClaimers[user] == claimer, 'CLAIMER_UNAUTHORIZED');`\n+    require(false, 'CLAIMER_UNAUTHORIZED');\n     _;\n   }\n \n",
    "id": "3",
    "name": "mutants/3/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -80,7 +80,8 @@\n   {\n     for (uint256 i = 0; i < config.length; i++) {\n       // Get the current Scaled Total Supply of AToken or Debt token\n-      config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n+      /// DeleteExpressionMutation(`config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply()` |==> `assert(true)`) of: `config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();`\n+      assert(true);\n \n       // Install TransferStrategy logic at IncentivesController\n       _installTransferStrategy(config[i].reward, config[i].transferStrategy);\n",
    "id": "4",
    "name": "mutants/4/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -80,7 +80,8 @@\n   {\n     for (uint256 i = 0; i < config.length; i++) {\n       // Get the current Scaled Total Supply of AToken or Debt token\n-      config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n+      /// AssignmentMutation(`IScaledBalanceToken(config[i].asset).scaledTotalSupply()` |==> `0`) of: `config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();`\n+      config[i].totalSupply = 0;\n \n       // Install TransferStrategy logic at IncentivesController\n       _installTransferStrategy(config[i].reward, config[i].transferStrategy);\n",
    "id": "5",
    "name": "mutants/5/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -80,7 +80,8 @@\n   {\n     for (uint256 i = 0; i < config.length; i++) {\n       // Get the current Scaled Total Supply of AToken or Debt token\n-      config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n+      /// AssignmentMutation(`IScaledBalanceToken(config[i].asset).scaledTotalSupply()` |==> `1`) of: `config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();`\n+      config[i].totalSupply = 1;\n \n       // Install TransferStrategy logic at IncentivesController\n       _installTransferStrategy(config[i].reward, config[i].transferStrategy);\n",
    "id": "6",
    "name": "mutants/6/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -83,7 +83,8 @@\n       config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n \n       // Install TransferStrategy logic at IncentivesController\n-      _installTransferStrategy(config[i].reward, config[i].transferStrategy);\n+      /// DeleteExpressionMutation(`_installTransferStrategy(config[i].reward, config[i].transferStrategy)` |==> `assert(true)`) of: `_installTransferStrategy(config[i].reward, config[i].transferStrategy);`\n+      assert(true);\n \n       // Set reward oracle, enforces input oracle to have latestPrice function\n       _setRewardOracle(config[i].reward, config[i].rewardOracle);\n",
    "id": "7",
    "name": "mutants/7/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -86,7 +86,8 @@\n       _installTransferStrategy(config[i].reward, config[i].transferStrategy);\n \n       // Set reward oracle, enforces input oracle to have latestPrice function\n-      _setRewardOracle(config[i].reward, config[i].rewardOracle);\n+      /// DeleteExpressionMutation(`_setRewardOracle(config[i].reward, config[i].rewardOracle)` |==> `assert(true)`) of: `_setRewardOracle(config[i].reward, config[i].rewardOracle);`\n+      assert(true);\n     }\n     _configureAssets(config);\n   }\n",
    "id": "8",
    "name": "mutants/8/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -78,7 +78,8 @@\n     override\n     onlyEmissionManager\n   {\n-    for (uint256 i = 0; i < config.length; i++) {\n+    /// SwapArgumentsOperatorMutation(`i < config.length` |==> `config.length < i`) of: `for (uint256 i = 0; i < config.length; i++) {`\n+    for (uint256 i = 0; config.length < i; i++) {\n       // Get the current Scaled Total Supply of AToken or Debt token\n       config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n \n",
    "id": "9",
    "name": "mutants/9/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -78,7 +78,8 @@\n     override\n     onlyEmissionManager\n   {\n-    for (uint256 i = 0; i < config.length; i++) {\n+    /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < config.length; i++) {`\n+    for (uint256 i = 0; i < config.length; assert(true)) {\n       // Get the current Scaled Total Supply of AToken or Debt token\n       config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n \n",
    "id": "10",
    "name": "mutants/10/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -78,7 +78,8 @@\n     override\n     onlyEmissionManager\n   {\n-    for (uint256 i = 0; i < config.length; i++) {\n+    /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < config.length; i++) {`\n+    for (uint256 i = 0; i < config.length; i--) {\n       // Get the current Scaled Total Supply of AToken or Debt token\n       config[i].totalSupply = IScaledBalanceToken(config[i].asset).scaledTotalSupply();\n \n",
    "id": "11",
    "name": "mutants/11/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -88,7 +88,8 @@\n       // Set reward oracle, enforces input oracle to have latestPrice function\n       _setRewardOracle(config[i].reward, config[i].rewardOracle);\n     }\n-    _configureAssets(config);\n+    /// DeleteExpressionMutation(`_configureAssets(config)` |==> `assert(true)`) of: `_configureAssets(config);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IRewardsController\n",
    "id": "12",
    "name": "mutants/12/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -96,7 +96,8 @@\n     external\n     onlyEmissionManager\n   {\n-    _installTransferStrategy(reward, transferStrategy);\n+    /// DeleteExpressionMutation(`_installTransferStrategy(reward, transferStrategy)` |==> `assert(true)`) of: `_installTransferStrategy(reward, transferStrategy);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IRewardsController\n",
    "id": "13",
    "name": "mutants/13/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -104,7 +104,8 @@\n     external\n     onlyEmissionManager\n   {\n-    _setRewardOracle(reward, rewardOracle);\n+    /// DeleteExpressionMutation(`_setRewardOracle(reward, rewardOracle)` |==> `assert(true)`) of: `_setRewardOracle(reward, rewardOracle);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IRewardsController\n",
    "id": "14",
    "name": "mutants/14/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -113,7 +113,8 @@\n     uint256 totalSupply,\n     uint256 userBalance\n   ) external override {\n-    _updateData(msg.sender, user, userBalance, totalSupply);\n+    /// DeleteExpressionMutation(`_updateData(msg.sender, user, userBalance, totalSupply)` |==> `assert(true)`) of: `_updateData(msg.sender, user, userBalance, totalSupply);`\n+    assert(true);\n   }\n \n   /// @inheritdoc IRewardsController\n",
    "id": "15",
    "name": "mutants/15/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -123,7 +123,8 @@\n     address to,\n     address reward\n   ) external override returns (uint256) {\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// DeleteExpressionMutation(`require(to != address(0), 'INVALID_TO_ADDRESS')` |==> `assert(true)`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    assert(true);\n     return _claimRewards(assets, amount, msg.sender, msg.sender, to, reward);\n   }\n \n",
    "id": "16",
    "name": "mutants/16/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -123,7 +123,8 @@\n     address to,\n     address reward\n   ) external override returns (uint256) {\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `true`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(true, 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, msg.sender, to, reward);\n   }\n \n",
    "id": "17",
    "name": "mutants/17/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -123,7 +123,8 @@\n     address to,\n     address reward\n   ) external override returns (uint256) {\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `false`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(false, 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, msg.sender, to, reward);\n   }\n \n",
    "id": "18",
    "name": "mutants/18/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -135,7 +135,8 @@\n     address to,\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n-    require(user != address(0), 'INVALID_USER_ADDRESS');\n+    /// DeleteExpressionMutation(`require(user != address(0), 'INVALID_USER_ADDRESS')` |==> `assert(true)`) of: `require(user != address(0), 'INVALID_USER_ADDRESS');`\n+    assert(true);\n     require(to != address(0), 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n",
    "id": "19",
    "name": "mutants/19/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -135,7 +135,8 @@\n     address to,\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n-    require(user != address(0), 'INVALID_USER_ADDRESS');\n+    /// RequireMutation(`user != address(0)` |==> `true`) of: `require(user != address(0), 'INVALID_USER_ADDRESS');`\n+    require(true, 'INVALID_USER_ADDRESS');\n     require(to != address(0), 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n",
    "id": "20",
    "name": "mutants/20/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -135,7 +135,8 @@\n     address to,\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n-    require(user != address(0), 'INVALID_USER_ADDRESS');\n+    /// RequireMutation(`user != address(0)` |==> `false`) of: `require(user != address(0), 'INVALID_USER_ADDRESS');`\n+    require(false, 'INVALID_USER_ADDRESS');\n     require(to != address(0), 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n",
    "id": "21",
    "name": "mutants/21/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -136,7 +136,8 @@\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// DeleteExpressionMutation(`require(to != address(0), 'INVALID_TO_ADDRESS')` |==> `assert(true)`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    assert(true);\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n \n",
    "id": "22",
    "name": "mutants/22/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -136,7 +136,8 @@\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `true`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(true, 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n \n",
    "id": "23",
    "name": "mutants/23/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -136,7 +136,8 @@\n     address reward\n   ) external override onlyAuthorizedClaimers(msg.sender, user) returns (uint256) {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `false`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(false, 'INVALID_TO_ADDRESS');\n     return _claimRewards(assets, amount, msg.sender, user, to, reward);\n   }\n \n",
    "id": "24",
    "name": "mutants/24/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -155,7 +155,8 @@\n     override\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// DeleteExpressionMutation(`require(to != address(0), 'INVALID_TO_ADDRESS')` |==> `assert(true)`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    assert(true);\n     return _claimAllRewards(assets, msg.sender, msg.sender, to);\n   }\n \n",
    "id": "25",
    "name": "mutants/25/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -155,7 +155,8 @@\n     override\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `true`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(true, 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, msg.sender, to);\n   }\n \n",
    "id": "26",
    "name": "mutants/26/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -155,7 +155,8 @@\n     override\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `false`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(false, 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, msg.sender, to);\n   }\n \n",
    "id": "27",
    "name": "mutants/27/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -170,7 +170,8 @@\n     onlyAuthorizedClaimers(msg.sender, user)\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n-    require(user != address(0), 'INVALID_USER_ADDRESS');\n+    /// DeleteExpressionMutation(`require(user != address(0), 'INVALID_USER_ADDRESS')` |==> `assert(true)`) of: `require(user != address(0), 'INVALID_USER_ADDRESS');`\n+    assert(true);\n     require(to != address(0), 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, user, to);\n   }\n",
    "id": "28",
    "name": "mutants/28/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -170,7 +170,8 @@\n     onlyAuthorizedClaimers(msg.sender, user)\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n-    require(user != address(0), 'INVALID_USER_ADDRESS');\n+    /// RequireMutation(`user != address(0)` |==> `true`) of: `require(user != address(0), 'INVALID_USER_ADDRESS');`\n+    require(true, 'INVALID_USER_ADDRESS');\n     require(to != address(0), 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, user, to);\n   }\n",
    "id": "29",
    "name": "mutants/29/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -170,7 +170,8 @@\n     onlyAuthorizedClaimers(msg.sender, user)\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n-    require(user != address(0), 'INVALID_USER_ADDRESS');\n+    /// RequireMutation(`user != address(0)` |==> `false`) of: `require(user != address(0), 'INVALID_USER_ADDRESS');`\n+    require(false, 'INVALID_USER_ADDRESS');\n     require(to != address(0), 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, user, to);\n   }\n",
    "id": "30",
    "name": "mutants/30/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// DeleteExpressionMutation(`require(to != address(0), 'INVALID_TO_ADDRESS')` |==> `assert(true)`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    assert(true);\n     return _claimAllRewards(assets, msg.sender, user, to);\n   }\n \n",
    "id": "31",
    "name": "mutants/31/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `true`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(true, 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, user, to);\n   }\n \n",
    "id": "32",
    "name": "mutants/32/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -171,7 +171,8 @@\n     returns (address[] memory rewardsList, uint256[] memory claimedAmounts)\n   {\n     require(user != address(0), 'INVALID_USER_ADDRESS');\n-    require(to != address(0), 'INVALID_TO_ADDRESS');\n+    /// RequireMutation(`to != address(0)` |==> `false`) of: `require(to != address(0), 'INVALID_TO_ADDRESS');`\n+    require(false, 'INVALID_TO_ADDRESS');\n     return _claimAllRewards(assets, msg.sender, user, to);\n   }\n \n",
    "id": "33",
    "name": "mutants/33/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -186,7 +186,8 @@\n \n   /// @inheritdoc IRewardsController\n   function setClaimer(address user, address caller) external override onlyEmissionManager {\n-    _authorizedClaimers[user] = caller;\n+    /// DeleteExpressionMutation(`_authorizedClaimers[user] = caller` |==> `assert(true)`) of: `_authorizedClaimers[user] = caller;`\n+    assert(true);\n     emit ClaimerSet(user, caller);\n   }\n \n",
    "id": "34",
    "name": "mutants/34/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -202,7 +202,8 @@\n     override\n     returns (RewardsDataTypes.UserAssetBalance[] memory userAssetBalances)\n   {\n-    userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length);\n+    /// DeleteExpressionMutation(`userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length)` |==> `assert(true)`) of: `userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length);`\n+    assert(true);\n     for (uint256 i = 0; i < assets.length; i++) {\n       userAssetBalances[i].asset = assets[i];\n       (userAssetBalances[i].userBalance, userAssetBalances[i].totalSupply) = IScaledBalanceToken(\n",
    "id": "35",
    "name": "mutants/35/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -204,7 +204,8 @@\n   {\n     userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length);\n     for (uint256 i = 0; i < assets.length; i++) {\n-      userAssetBalances[i].asset = assets[i];\n+      /// DeleteExpressionMutation(`userAssetBalances[i].asset = assets[i]` |==> `assert(true)`) of: `userAssetBalances[i].asset = assets[i];`\n+      assert(true);\n       (userAssetBalances[i].userBalance, userAssetBalances[i].totalSupply) = IScaledBalanceToken(\n         assets[i]\n       ).getScaledUserBalanceAndSupply(user);\n",
    "id": "36",
    "name": "mutants/36/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -203,7 +203,8 @@\n     returns (RewardsDataTypes.UserAssetBalance[] memory userAssetBalances)\n   {\n     userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length);\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// SwapArgumentsOperatorMutation(`i < assets.length` |==> `assets.length < i`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; assets.length < i; i++) {\n       userAssetBalances[i].asset = assets[i];\n       (userAssetBalances[i].userBalance, userAssetBalances[i].totalSupply) = IScaledBalanceToken(\n         assets[i]\n",
    "id": "37",
    "name": "mutants/37/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -203,7 +203,8 @@\n     returns (RewardsDataTypes.UserAssetBalance[] memory userAssetBalances)\n   {\n     userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length);\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; assert(true)) {\n       userAssetBalances[i].asset = assets[i];\n       (userAssetBalances[i].userBalance, userAssetBalances[i].totalSupply) = IScaledBalanceToken(\n         assets[i]\n",
    "id": "38",
    "name": "mutants/38/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -203,7 +203,8 @@\n     returns (RewardsDataTypes.UserAssetBalance[] memory userAssetBalances)\n   {\n     userAssetBalances = new RewardsDataTypes.UserAssetBalance[](assets.length);\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; i--) {\n       userAssetBalances[i].asset = assets[i];\n       (userAssetBalances[i].userBalance, userAssetBalances[i].totalSupply) = IScaledBalanceToken(\n         assets[i]\n",
    "id": "39",
    "name": "mutants/39/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -230,7 +230,8 @@\n     address to,\n     address reward\n   ) internal returns (uint256) {\n-    if (amount == 0) {\n+    /// IfStatementMutation(`amount == 0` |==> `true`) of: `if (amount == 0) {`\n+    if (true) {\n       return 0;\n     }\n     uint256 totalRewards;\n",
    "id": "40",
    "name": "mutants/40/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -230,7 +230,8 @@\n     address to,\n     address reward\n   ) internal returns (uint256) {\n-    if (amount == 0) {\n+    /// IfStatementMutation(`amount == 0` |==> `false`) of: `if (amount == 0) {`\n+    if (false) {\n       return 0;\n     }\n     uint256 totalRewards;\n",
    "id": "41",
    "name": "mutants/41/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -235,7 +235,8 @@\n     }\n     uint256 totalRewards;\n \n-    _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n+    /// DeleteExpressionMutation(`_updateDataMultiple(user, _getUserAssetBalances(assets, user))` |==> `assert(true)`) of: `_updateDataMultiple(user, _getUserAssetBalances(assets, user));`\n+    assert(true);\n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n",
    "id": "42",
    "name": "mutants/42/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -238,7 +238,8 @@\n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n-      totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n+      /// DeleteExpressionMutation(`totalRewards += _assets[asset].rewards[reward].usersData[user].accrued` |==> `assert(true)`) of: `totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;`\n+      assert(true);\n \n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n",
    "id": "43",
    "name": "mutants/43/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -238,7 +238,8 @@\n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n-      totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n+      /// AssignmentMutation(`_assets[asset].rewards[reward].usersData[user].accrued` |==> `0`) of: `totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;`\n+      totalRewards += 0;\n \n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n",
    "id": "44",
    "name": "mutants/44/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -238,7 +238,8 @@\n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n-      totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n+      /// AssignmentMutation(`_assets[asset].rewards[reward].usersData[user].accrued` |==> `1`) of: `totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;`\n+      totalRewards += 1;\n \n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n",
    "id": "45",
    "name": "mutants/45/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -240,7 +240,8 @@\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n-      if (totalRewards <= amount) {\n+      /// IfStatementMutation(`totalRewards <= amount` |==> `true`) of: `if (totalRewards <= amount) {`\n+      if (true) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n         uint256 difference = totalRewards - amount;\n",
    "id": "46",
    "name": "mutants/46/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -240,7 +240,8 @@\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n-      if (totalRewards <= amount) {\n+      /// IfStatementMutation(`totalRewards <= amount` |==> `false`) of: `if (totalRewards <= amount) {`\n+      if (false) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n         uint256 difference = totalRewards - amount;\n",
    "id": "47",
    "name": "mutants/47/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -240,7 +240,8 @@\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n-      if (totalRewards <= amount) {\n+      /// SwapArgumentsOperatorMutation(`totalRewards <= amount` |==> `amount <= totalRewards`) of: `if (totalRewards <= amount) {`\n+      if (amount <= totalRewards) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n         uint256 difference = totalRewards - amount;\n",
    "id": "48",
    "name": "mutants/48/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// BinaryOpMutation(`-` |==> `+`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = totalRewards+amount;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "49",
    "name": "mutants/49/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// BinaryOpMutation(`-` |==> `*`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = totalRewards*amount;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "50",
    "name": "mutants/50/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// BinaryOpMutation(`-` |==> `/`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = totalRewards/amount;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "51",
    "name": "mutants/51/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// BinaryOpMutation(`-` |==> `%`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = totalRewards%amount;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "52",
    "name": "mutants/52/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "BinaryOpMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// BinaryOpMutation(`-` |==> `**`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = totalRewards**amount;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "53",
    "name": "mutants/53/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -243,7 +243,8 @@\n       if (totalRewards <= amount) {\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n-        uint256 difference = totalRewards - amount;\n+        /// SwapArgumentsOperatorMutation(`totalRewards - amount` |==> `amount - totalRewards`) of: `uint256 difference = totalRewards - amount;`\n+        uint256 difference = amount - totalRewards;\n         totalRewards -= difference;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n",
    "id": "54",
    "name": "mutants/54/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -244,7 +244,8 @@\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n         uint256 difference = totalRewards - amount;\n-        totalRewards -= difference;\n+        /// DeleteExpressionMutation(`totalRewards -= difference` |==> `assert(true)`) of: `totalRewards -= difference;`\n+        assert(true);\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n       }\n",
    "id": "55",
    "name": "mutants/55/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -244,7 +244,8 @@\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n         uint256 difference = totalRewards - amount;\n-        totalRewards -= difference;\n+        /// AssignmentMutation(`difference` |==> `0`) of: `totalRewards -= difference;`\n+        totalRewards -= 0;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n       }\n",
    "id": "56",
    "name": "mutants/56/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -244,7 +244,8 @@\n         _assets[asset].rewards[reward].usersData[user].accrued = 0;\n       } else {\n         uint256 difference = totalRewards - amount;\n-        totalRewards -= difference;\n+        /// AssignmentMutation(`difference` |==> `1`) of: `totalRewards -= difference;`\n+        totalRewards -= 1;\n         _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n         break;\n       }\n",
    "id": "57",
    "name": "mutants/57/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -245,7 +245,8 @@\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n-        _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n+        /// DeleteExpressionMutation(`_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128()` |==> `assert(true)`) of: `_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();`\n+        assert(true);\n         break;\n       }\n     }\n",
    "id": "58",
    "name": "mutants/58/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -245,7 +245,8 @@\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n-        _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n+        /// AssignmentMutation(`difference.toUint128()` |==> `0`) of: `_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();`\n+        _assets[asset].rewards[reward].usersData[user].accrued = 0;\n         break;\n       }\n     }\n",
    "id": "59",
    "name": "mutants/59/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -245,7 +245,8 @@\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n-        _assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();\n+        /// AssignmentMutation(`difference.toUint128()` |==> `1`) of: `_assets[asset].rewards[reward].usersData[user].accrued = difference.toUint128();`\n+        _assets[asset].rewards[reward].usersData[user].accrued = 1;\n         break;\n       }\n     }\n",
    "id": "60",
    "name": "mutants/60/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -241,7 +241,8 @@\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n       if (totalRewards <= amount) {\n-        _assets[asset].rewards[reward].usersData[user].accrued = 0;\n+        /// DeleteExpressionMutation(`_assets[asset].rewards[reward].usersData[user].accrued = 0` |==> `assert(true)`) of: `_assets[asset].rewards[reward].usersData[user].accrued = 0;`\n+        assert(true);\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n",
    "id": "61",
    "name": "mutants/61/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -241,7 +241,8 @@\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n       if (totalRewards <= amount) {\n-        _assets[asset].rewards[reward].usersData[user].accrued = 0;\n+        /// AssignmentMutation(`0` |==> `1`) of: `_assets[asset].rewards[reward].usersData[user].accrued = 0;`\n+        _assets[asset].rewards[reward].usersData[user].accrued = 1;\n       } else {\n         uint256 difference = totalRewards - amount;\n         totalRewards -= difference;\n",
    "id": "62",
    "name": "mutants/62/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -236,7 +236,8 @@\n     uint256 totalRewards;\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// SwapArgumentsOperatorMutation(`i < assets.length` |==> `assets.length < i`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; assets.length < i; i++) {\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n",
    "id": "63",
    "name": "mutants/63/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -236,7 +236,8 @@\n     uint256 totalRewards;\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; assert(true)) {\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n",
    "id": "64",
    "name": "mutants/64/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -236,7 +236,8 @@\n     uint256 totalRewards;\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; i--) {\n       address asset = assets[i];\n       totalRewards += _assets[asset].rewards[reward].usersData[user].accrued;\n \n",
    "id": "65",
    "name": "mutants/65/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -250,7 +250,8 @@\n       }\n     }\n \n-    if (totalRewards == 0) {\n+    /// IfStatementMutation(`totalRewards == 0` |==> `true`) of: `if (totalRewards == 0) {`\n+    if (true) {\n       return 0;\n     }\n \n",
    "id": "66",
    "name": "mutants/66/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -250,7 +250,8 @@\n       }\n     }\n \n-    if (totalRewards == 0) {\n+    /// IfStatementMutation(`totalRewards == 0` |==> `false`) of: `if (totalRewards == 0) {`\n+    if (false) {\n       return 0;\n     }\n \n",
    "id": "67",
    "name": "mutants/67/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -254,7 +254,8 @@\n       return 0;\n     }\n \n-    _transferRewards(to, reward, totalRewards);\n+    /// DeleteExpressionMutation(`_transferRewards(to, reward, totalRewards)` |==> `assert(true)`) of: `_transferRewards(to, reward, totalRewards);`\n+    assert(true);\n     emit RewardsClaimed(user, reward, to, claimer, totalRewards);\n \n     return totalRewards;\n",
    "id": "68",
    "name": "mutants/68/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -277,7 +277,8 @@\n     address to\n   ) internal returns (address[] memory rewardsList, uint256[] memory claimedAmounts) {\n     uint256 rewardsListLength = _rewardsList.length;\n-    rewardsList = new address[](rewardsListLength);\n+    /// DeleteExpressionMutation(`rewardsList = new address[](rewardsListLength)` |==> `assert(true)`) of: `rewardsList = new address[](rewardsListLength);`\n+    assert(true);\n     claimedAmounts = new uint256[](rewardsListLength);\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n",
    "id": "69",
    "name": "mutants/69/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -278,7 +278,8 @@\n   ) internal returns (address[] memory rewardsList, uint256[] memory claimedAmounts) {\n     uint256 rewardsListLength = _rewardsList.length;\n     rewardsList = new address[](rewardsListLength);\n-    claimedAmounts = new uint256[](rewardsListLength);\n+    /// DeleteExpressionMutation(`claimedAmounts = new uint256[](rewardsListLength)` |==> `assert(true)`) of: `claimedAmounts = new uint256[](rewardsListLength);`\n+    assert(true);\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n \n",
    "id": "70",
    "name": "mutants/70/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -280,7 +280,8 @@\n     rewardsList = new address[](rewardsListLength);\n     claimedAmounts = new uint256[](rewardsListLength);\n \n-    _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n+    /// DeleteExpressionMutation(`_updateDataMultiple(user, _getUserAssetBalances(assets, user))` |==> `assert(true)`) of: `_updateDataMultiple(user, _getUserAssetBalances(assets, user));`\n+    assert(true);\n \n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n",
    "id": "71",
    "name": "mutants/71/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -285,7 +285,8 @@\n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n       for (uint256 j = 0; j < rewardsListLength; j++) {\n-        if (rewardsList[j] == address(0)) {\n+        /// IfStatementMutation(`rewardsList[j] == address(0)` |==> `true`) of: `if (rewardsList[j] == address(0)) {`\n+        if (true) {\n           rewardsList[j] = _rewardsList[j];\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n",
    "id": "72",
    "name": "mutants/72/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -285,7 +285,8 @@\n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n       for (uint256 j = 0; j < rewardsListLength; j++) {\n-        if (rewardsList[j] == address(0)) {\n+        /// IfStatementMutation(`rewardsList[j] == address(0)` |==> `false`) of: `if (rewardsList[j] == address(0)) {`\n+        if (false) {\n           rewardsList[j] = _rewardsList[j];\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n",
    "id": "73",
    "name": "mutants/73/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -286,7 +286,8 @@\n       address asset = assets[i];\n       for (uint256 j = 0; j < rewardsListLength; j++) {\n         if (rewardsList[j] == address(0)) {\n-          rewardsList[j] = _rewardsList[j];\n+          /// DeleteExpressionMutation(`rewardsList[j] = _rewardsList[j]` |==> `assert(true)`) of: `rewardsList[j] = _rewardsList[j];`\n+          assert(true);\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n",
    "id": "74",
    "name": "mutants/74/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -289,7 +289,8 @@\n           rewardsList[j] = _rewardsList[j];\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n-        if (rewardAmount != 0) {\n+        /// IfStatementMutation(`rewardAmount != 0` |==> `true`) of: `if (rewardAmount != 0) {`\n+        if (true) {\n           claimedAmounts[j] += rewardAmount;\n           _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n         }\n",
    "id": "75",
    "name": "mutants/75/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "IfStatementMutation",
    "diff": "--- original\n+++ mutant\n@@ -289,7 +289,8 @@\n           rewardsList[j] = _rewardsList[j];\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n-        if (rewardAmount != 0) {\n+        /// IfStatementMutation(`rewardAmount != 0` |==> `false`) of: `if (rewardAmount != 0) {`\n+        if (false) {\n           claimedAmounts[j] += rewardAmount;\n           _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n         }\n",
    "id": "76",
    "name": "mutants/76/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -290,7 +290,8 @@\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n-          claimedAmounts[j] += rewardAmount;\n+          /// DeleteExpressionMutation(`claimedAmounts[j] += rewardAmount` |==> `assert(true)`) of: `claimedAmounts[j] += rewardAmount;`\n+          assert(true);\n           _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n         }\n       }\n",
    "id": "77",
    "name": "mutants/77/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -290,7 +290,8 @@\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n-          claimedAmounts[j] += rewardAmount;\n+          /// AssignmentMutation(`rewardAmount` |==> `0`) of: `claimedAmounts[j] += rewardAmount;`\n+          claimedAmounts[j] += 0;\n           _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n         }\n       }\n",
    "id": "78",
    "name": "mutants/78/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -290,7 +290,8 @@\n         }\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n-          claimedAmounts[j] += rewardAmount;\n+          /// AssignmentMutation(`rewardAmount` |==> `1`) of: `claimedAmounts[j] += rewardAmount;`\n+          claimedAmounts[j] += 1;\n           _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n         }\n       }\n",
    "id": "79",
    "name": "mutants/79/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -291,7 +291,8 @@\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n           claimedAmounts[j] += rewardAmount;\n-          _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n+          /// DeleteExpressionMutation(`_assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0` |==> `assert(true)`) of: `_assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;`\n+          assert(true);\n         }\n       }\n     }\n",
    "id": "80",
    "name": "mutants/80/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "AssignmentMutation",
    "diff": "--- original\n+++ mutant\n@@ -291,7 +291,8 @@\n         uint256 rewardAmount = _assets[asset].rewards[rewardsList[j]].usersData[user].accrued;\n         if (rewardAmount != 0) {\n           claimedAmounts[j] += rewardAmount;\n-          _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;\n+          /// AssignmentMutation(`0` |==> `1`) of: `_assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 0;`\n+          _assets[asset].rewards[rewardsList[j]].usersData[user].accrued = 1;\n         }\n       }\n     }\n",
    "id": "81",
    "name": "mutants/81/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -284,7 +284,8 @@\n \n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n-      for (uint256 j = 0; j < rewardsListLength; j++) {\n+      /// SwapArgumentsOperatorMutation(`j < rewardsListLength` |==> `rewardsListLength < j`) of: `for (uint256 j = 0; j < rewardsListLength; j++) {`\n+      for (uint256 j = 0; rewardsListLength < j; j++) {\n         if (rewardsList[j] == address(0)) {\n           rewardsList[j] = _rewardsList[j];\n         }\n",
    "id": "82",
    "name": "mutants/82/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -284,7 +284,8 @@\n \n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n-      for (uint256 j = 0; j < rewardsListLength; j++) {\n+      /// DeleteExpressionMutation(`j++` |==> `assert(true)`) of: `for (uint256 j = 0; j < rewardsListLength; j++) {`\n+      for (uint256 j = 0; j < rewardsListLength; assert(true)) {\n         if (rewardsList[j] == address(0)) {\n           rewardsList[j] = _rewardsList[j];\n         }\n",
    "id": "83",
    "name": "mutants/83/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -284,7 +284,8 @@\n \n     for (uint256 i = 0; i < assets.length; i++) {\n       address asset = assets[i];\n-      for (uint256 j = 0; j < rewardsListLength; j++) {\n+      /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 j = 0; j < rewardsListLength; j++) {`\n+      for (uint256 j = 0; j < rewardsListLength; j--) {\n         if (rewardsList[j] == address(0)) {\n           rewardsList[j] = _rewardsList[j];\n         }\n",
    "id": "84",
    "name": "mutants/84/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -282,7 +282,8 @@\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n \n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// SwapArgumentsOperatorMutation(`i < assets.length` |==> `assets.length < i`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; assets.length < i; i++) {\n       address asset = assets[i];\n       for (uint256 j = 0; j < rewardsListLength; j++) {\n         if (rewardsList[j] == address(0)) {\n",
    "id": "85",
    "name": "mutants/85/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -282,7 +282,8 @@\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n \n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; assert(true)) {\n       address asset = assets[i];\n       for (uint256 j = 0; j < rewardsListLength; j++) {\n         if (rewardsList[j] == address(0)) {\n",
    "id": "86",
    "name": "mutants/86/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -282,7 +282,8 @@\n \n     _updateDataMultiple(user, _getUserAssetBalances(assets, user));\n \n-    for (uint256 i = 0; i < assets.length; i++) {\n+    /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < assets.length; i++) {`\n+    for (uint256 i = 0; i < assets.length; i--) {\n       address asset = assets[i];\n       for (uint256 j = 0; j < rewardsListLength; j++) {\n         if (rewardsList[j] == address(0)) {\n",
    "id": "87",
    "name": "mutants/87/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -296,7 +296,8 @@\n       }\n     }\n     for (uint256 i = 0; i < rewardsListLength; i++) {\n-      _transferRewards(to, rewardsList[i], claimedAmounts[i]);\n+      /// DeleteExpressionMutation(`_transferRewards(to, rewardsList[i], claimedAmounts[i])` |==> `assert(true)`) of: `_transferRewards(to, rewardsList[i], claimedAmounts[i]);`\n+      assert(true);\n       emit RewardsClaimed(user, rewardsList[i], to, claimer, claimedAmounts[i]);\n     }\n     return (rewardsList, claimedAmounts);\n",
    "id": "88",
    "name": "mutants/88/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -295,7 +295,8 @@\n         }\n       }\n     }\n-    for (uint256 i = 0; i < rewardsListLength; i++) {\n+    /// SwapArgumentsOperatorMutation(`i < rewardsListLength` |==> `rewardsListLength < i`) of: `for (uint256 i = 0; i < rewardsListLength; i++) {`\n+    for (uint256 i = 0; rewardsListLength < i; i++) {\n       _transferRewards(to, rewardsList[i], claimedAmounts[i]);\n       emit RewardsClaimed(user, rewardsList[i], to, claimer, claimedAmounts[i]);\n     }\n",
    "id": "89",
    "name": "mutants/89/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -295,7 +295,8 @@\n         }\n       }\n     }\n-    for (uint256 i = 0; i < rewardsListLength; i++) {\n+    /// DeleteExpressionMutation(`i++` |==> `assert(true)`) of: `for (uint256 i = 0; i < rewardsListLength; i++) {`\n+    for (uint256 i = 0; i < rewardsListLength; assert(true)) {\n       _transferRewards(to, rewardsList[i], claimedAmounts[i]);\n       emit RewardsClaimed(user, rewardsList[i], to, claimer, claimedAmounts[i]);\n     }\n",
    "id": "90",
    "name": "mutants/90/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "UnaryOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -295,7 +295,8 @@\n         }\n       }\n     }\n-    for (uint256 i = 0; i < rewardsListLength; i++) {\n+    /// UnaryOperatorMutation(`++` |==> `--`) of: `for (uint256 i = 0; i < rewardsListLength; i++) {`\n+    for (uint256 i = 0; i < rewardsListLength; i--) {\n       _transferRewards(to, rewardsList[i], claimedAmounts[i]);\n       emit RewardsClaimed(user, rewardsList[i], to, claimer, claimedAmounts[i]);\n     }\n",
    "id": "91",
    "name": "mutants/91/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -317,7 +317,8 @@\n \n     bool success = transferStrategy.performTransfer(to, reward, amount);\n \n-    require(success == true, 'TRANSFER_ERROR');\n+    /// DeleteExpressionMutation(`require(success == true, 'TRANSFER_ERROR')` |==> `assert(true)`) of: `require(success == true, 'TRANSFER_ERROR');`\n+    assert(true);\n   }\n \n   /**\n",
    "id": "92",
    "name": "mutants/92/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -317,7 +317,8 @@\n \n     bool success = transferStrategy.performTransfer(to, reward, amount);\n \n-    require(success == true, 'TRANSFER_ERROR');\n+    /// RequireMutation(`success == true` |==> `true`) of: `require(success == true, 'TRANSFER_ERROR');`\n+    require(true, 'TRANSFER_ERROR');\n   }\n \n   /**\n",
    "id": "93",
    "name": "mutants/93/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -317,7 +317,8 @@\n \n     bool success = transferStrategy.performTransfer(to, reward, amount);\n \n-    require(success == true, 'TRANSFER_ERROR');\n+    /// RequireMutation(`success == true` |==> `false`) of: `require(success == true, 'TRANSFER_ERROR');`\n+    require(false, 'TRANSFER_ERROR');\n   }\n \n   /**\n",
    "id": "94",
    "name": "mutants/94/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -335,7 +335,8 @@\n     assembly {\n       size := extcodesize(account)\n     }\n-    return size > 0;\n+    /// SwapArgumentsOperatorMutation(`size > 0` |==> `0 > size`) of: `return size > 0;`\n+    return 0 > size;\n   }\n \n   /**\n",
    "id": "95",
    "name": "mutants/95/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -346,7 +346,8 @@\n   function _installTransferStrategy(address reward, ITransferStrategyBase transferStrategy)\n     internal\n   {\n-    require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n+    /// DeleteExpressionMutation(`require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO')` |==> `assert(true)`) of: `require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');`\n+    assert(true);\n     require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n \n     _transferStrategy[reward] = transferStrategy;\n",
    "id": "96",
    "name": "mutants/96/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -346,7 +346,8 @@\n   function _installTransferStrategy(address reward, ITransferStrategyBase transferStrategy)\n     internal\n   {\n-    require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n+    /// RequireMutation(`address(transferStrategy) != address(0)` |==> `true`) of: `require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');`\n+    require(true, 'STRATEGY_CAN_NOT_BE_ZERO');\n     require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n \n     _transferStrategy[reward] = transferStrategy;\n",
    "id": "97",
    "name": "mutants/97/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -346,7 +346,8 @@\n   function _installTransferStrategy(address reward, ITransferStrategyBase transferStrategy)\n     internal\n   {\n-    require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n+    /// RequireMutation(`address(transferStrategy) != address(0)` |==> `false`) of: `require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');`\n+    require(false, 'STRATEGY_CAN_NOT_BE_ZERO');\n     require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n \n     _transferStrategy[reward] = transferStrategy;\n",
    "id": "98",
    "name": "mutants/98/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -347,7 +347,8 @@\n     internal\n   {\n     require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n-    require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n+    /// DeleteExpressionMutation(`require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT')` |==> `assert(true)`) of: `require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');`\n+    assert(true);\n \n     _transferStrategy[reward] = transferStrategy;\n \n",
    "id": "99",
    "name": "mutants/99/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -347,7 +347,8 @@\n     internal\n   {\n     require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n-    require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n+    /// RequireMutation(`_isContract(address(transferStrategy)) == true` |==> `true`) of: `require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');`\n+    require(true, 'STRATEGY_MUST_BE_CONTRACT');\n \n     _transferStrategy[reward] = transferStrategy;\n \n",
    "id": "100",
    "name": "mutants/100/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -347,7 +347,8 @@\n     internal\n   {\n     require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n-    require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n+    /// RequireMutation(`_isContract(address(transferStrategy)) == true` |==> `false`) of: `require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');`\n+    require(false, 'STRATEGY_MUST_BE_CONTRACT');\n \n     _transferStrategy[reward] = transferStrategy;\n \n",
    "id": "101",
    "name": "mutants/101/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -349,7 +349,8 @@\n     require(address(transferStrategy) != address(0), 'STRATEGY_CAN_NOT_BE_ZERO');\n     require(_isContract(address(transferStrategy)) == true, 'STRATEGY_MUST_BE_CONTRACT');\n \n-    _transferStrategy[reward] = transferStrategy;\n+    /// DeleteExpressionMutation(`_transferStrategy[reward] = transferStrategy` |==> `assert(true)`) of: `_transferStrategy[reward] = transferStrategy;`\n+    assert(true);\n \n     emit TransferStrategyInstalled(reward, address(transferStrategy));\n   }\n",
    "id": "102",
    "name": "mutants/102/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -362,7 +362,8 @@\n    */\n \n   function _setRewardOracle(address reward, IEACAggregatorProxy rewardOracle) internal {\n-    require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');\n+    /// DeleteExpressionMutation(`require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE')` |==> `assert(true)`) of: `require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');`\n+    assert(true);\n     _rewardOracle[reward] = rewardOracle;\n     emit RewardOracleUpdated(reward, address(rewardOracle));\n   }\n",
    "id": "103",
    "name": "mutants/103/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -362,7 +362,8 @@\n    */\n \n   function _setRewardOracle(address reward, IEACAggregatorProxy rewardOracle) internal {\n-    require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');\n+    /// RequireMutation(`rewardOracle.latestAnswer() > 0` |==> `true`) of: `require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');`\n+    require(true, 'ORACLE_MUST_RETURN_PRICE');\n     _rewardOracle[reward] = rewardOracle;\n     emit RewardOracleUpdated(reward, address(rewardOracle));\n   }\n",
    "id": "104",
    "name": "mutants/104/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "RequireMutation",
    "diff": "--- original\n+++ mutant\n@@ -362,7 +362,8 @@\n    */\n \n   function _setRewardOracle(address reward, IEACAggregatorProxy rewardOracle) internal {\n-    require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');\n+    /// RequireMutation(`rewardOracle.latestAnswer() > 0` |==> `false`) of: `require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');`\n+    require(false, 'ORACLE_MUST_RETURN_PRICE');\n     _rewardOracle[reward] = rewardOracle;\n     emit RewardOracleUpdated(reward, address(rewardOracle));\n   }\n",
    "id": "105",
    "name": "mutants/105/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "SwapArgumentsOperatorMutation",
    "diff": "--- original\n+++ mutant\n@@ -362,7 +362,8 @@\n    */\n \n   function _setRewardOracle(address reward, IEACAggregatorProxy rewardOracle) internal {\n-    require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');\n+    /// SwapArgumentsOperatorMutation(`rewardOracle.latestAnswer() > 0` |==> `0 > rewardOracle.latestAnswer()`) of: `require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');`\n+    require(0 > rewardOracle.latestAnswer(), 'ORACLE_MUST_RETURN_PRICE');\n     _rewardOracle[reward] = rewardOracle;\n     emit RewardOracleUpdated(reward, address(rewardOracle));\n   }\n",
    "id": "106",
    "name": "mutants/106/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  },
  {
    "description": "DeleteExpressionMutation",
    "diff": "--- original\n+++ mutant\n@@ -363,7 +363,8 @@\n \n   function _setRewardOracle(address reward, IEACAggregatorProxy rewardOracle) internal {\n     require(rewardOracle.latestAnswer() > 0, 'ORACLE_MUST_RETURN_PRICE');\n-    _rewardOracle[reward] = rewardOracle;\n+    /// DeleteExpressionMutation(`_rewardOracle[reward] = rewardOracle` |==> `assert(true)`) of: `_rewardOracle[reward] = rewardOracle;`\n+    assert(true);\n     emit RewardOracleUpdated(reward, address(rewardOracle));\n   }\n }\n",
    "id": "107",
    "name": "mutants/107/contracts/rewards/RewardsController.sol",
    "original": "contracts/rewards/RewardsController.sol",
    "sourceroot": "/Users/alain/DEV/aave-v3-periphery_contest"
  }
]